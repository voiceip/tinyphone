name: Tinyphone Build

on:
  release:
  push: 
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  tinyphone_win_job:
    name: Build Tinyphone Windows
    runs-on: windows-2016
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Checkout submodules # checkout rest
      shell: bash
      run: |
        git config --global url."https://github.com/".insteadOf "git@github.com:"
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

    - name: Restore Boost Cache
      uses: actions/cache@v2
      id: cache-boost
      with:
        path: C:\local\boost_1_68_0
        key: boost
    - name: Install Boost
      if: steps.cache-boost.outputs.cache-hit != 'true'
      run: |
        # Use the boost_1_72_0-msvc-14.1-64.exe for Windows 2016
        $Url = "https://boost.teeks99.com/bin/1.68.0/boost_1_68_0-msvc-14.0-32.exe"
        (New-Object System.Net.WebClient).DownloadFile($Url, "$env:TEMP\boost.exe")
        Start-Process -Wait -FilePath "$env:TEMP\boost.exe" "/SILENT","/SP-","/SUPPRESSMSGBOXES","/DIR=C:\local\boost_1_68_0"

    - name: Install Scoop & Binaries
      run : |
        [Net.ServicePointManager]::SecurityProtocol =[Net.SecurityProtocolType]::Tls12 ; 
        (New-Object System.Net.WebClient).DownloadFile('https://get.scoop.sh', "install_scoop.ps1");
        .\install_scoop.ps1 -RunAsAdmin
        scoop install curl wget cmake unzip make;

    - name: Install wixtoolset
      run : |
        $Url = "https://github.com/wixtoolset/wix3/releases/download/wix3112rtm/wix311.exe"
        (New-Object System.Net.WebClient).DownloadFile($Url, "$env:TEMP\wix311.exe")
        Start-Process -Wait -FilePath "$env:TEMP\wix311.exe" "/install","/quiet","/norestart"

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
    - name: Configure build for Windows MSVC
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x86

    - name: Build Project
      run : |
        $env:CodeDir=$(pwd)
        .\distribution\docker\release.ps1 -ErrorAction Stop

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: tinyphone
        path: |
          ./tinyphone-installer/bin/Release/tinyphone_installer.msi

    - name: Create Release
      uses: ncipollo/release-action@v1
      if: startsWith(github.ref, 'refs/tags/v')
      with:
        artifacts: "./tinyphone/Release/tinyphone.exe,tinyphone-installer/bin/Release/tinyphone_installer.msi"
        draft: true
        allowUpdates: true
        token: ${{ secrets.GH_TOKEN }}
